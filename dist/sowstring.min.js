function SowString(e,n){var i=Object(n);i.indentMultiple=Number(i.indentMultiple)||0;if(i.tabReplace===undefined)i.tabReplace=String(" ").repeat(4);if(i.emptyLines===undefined)i.emptyLines=false;if(i.useHeading===undefined)i.useHeading=false;var t=String(e).replace(/\r\n?/g,"\n").replace(/\t/g,i.tabReplace).trimRight().split("\n");var r=[];r.parent=null;r.useHeading=i.useHeading;var a=[];var u=[];var d=[];function o(e,n,p,l){var f,s,g,h=p;e.isNode=true;e.level=l;e.indent=n;while(h<t.length){s=t[h].trimLeft();if(!s.length){if(i.emptyLines)a.push(t[h]);h++;continue}g=t[h].length-s.length;if(i.indentMultiple){g=Math.floor(g/i.indentMultiple)*i.indentMultiple;s=t[h].substr(g)}if(i.filter&&false===i.filter.apply(null,[s,g])){h++;continue}if(i.intercept&&u[h]===undefined){let a={sibling:n,parent:e.parent?e.parent.indent:0,child:n+i.tabReplace.length,auto:"auto",node:e,tree:r};u[h]=i.intercept.apply(a,[s,g,h,t])}if(i.intercept&&u[h]!==undefined){g=u[h];if(g==="auto"){d.push(s);h++;continue}}if(n>g){e.push(...d);d=[];return h}if(n===g){e.push(...a);e.push(...d);e.push(s);a=[];d=[];h++;continue}if(e.length&&e[e.length-1]instanceof Array&&e[e.length-1].indent!==g){let n=e.indent;let i=e[e.length-1].indent;let t=g;throw new Error("Bad indentation at line "+(h+1)+", we expected "+n+", "+i+" or more spaces, but received only "+t)}f=[];f.parent=e;if(i.useHeading)f.heading=e.pop();h=o(f,g,h,l+1);f.pushIndex=e.push(f)-1}e.push(...d);d=[];return h}o(r,0,0,0);return r}function UnsowString(e,n){if(!e instanceof Array)throw new Error("Invalid tree to unsow (argument 1)");var i=Object(n);if(typeof i.each!=="function")i.each=null;if(typeof i.useHeading==="undefined")i.useHeading=Boolean(e.useHeading);var t=[];function r(e){if(e.parent&&i.each){let n=i.each(e,undefined);if(n!==undefined)t.push(n)}else if(e.parent&&i.useHeading)t.push(String(" ").repeat(e.parent.indent)+e.heading);for(var n of e){if(n instanceof Array)r(n);else if(i.each)t.push(i.each(e,n));else if(!n.trim())t.push(n);else t.push(String(" ").repeat(e.indent)+n)}}r(e);return t.join("\n")}if(typeof window!=="undefined"){window.SowString=SowString;window.UnsowString=UnsowString}if(typeof module!=="undefined"&&module.exports){module.exports.SowString=SowString;module.exports.UnsowString=UnsowString}